#include<iostream>
#include<algorithm>

using namespace std;

double knapsack(int n, int W, int *ws, double *vals)
{
	double **K = new double*[n + 1];
	for (size_t i = 0; i < n + 1; i++)
	{
		K[i] = new double[W + 1];
	}

	for (int i = 0; i <= n; ++i)
	{
		for (int j = 0; j <= W; ++j)
		{
			if (i == 0 || j == 0)
			{
				K[i][j] = 0;
			}
			else if (ws[i - 1] <= j)
			{
				K[i][j] = max(vals[i - 1] + K[i - 1][j - ws[i - 1]], K[i - 1][j]);
			}
			else
			{
				K[i][j] = K[i - 1][j];
			}
		}
	}
	
	double val = K[n][W];
	for (int i = 0; i < n+1; ++i) {
		delete[] K[i];
	}
	delete[] K;

	return val;
}

void main()
{
	// Tests
//	int n = 3, W = 50;
//	double vals[] = { 60, 100, 120 };
//	int ws[] = { 10, 20, 30 };

//	int n = 28, W = 83;
//	double vals[] = { 55, 61, 51, 75, 17, 22, 4, 13, 39, 28, 77, 49, 46, 91, 14, 67, 88, 62, 25, 37, 69, 38, 59, 62, 48, 88, 100, 53 };
//	int	ws[] = { 96, 16, 34, 53, 88, 6, 50, 26, 76, 10, 8, 4, 37, 18, 73, 54, 30, 31, 97, 2, 28, 24, 2, 30, 79, 77, 33, 86 };

	int n = 16, W = 98;
	double vals[] = { 20, 16, 45, 73, 99, 87, 38, 53, 99, 99, 38, 65, 22, 17, 17, 51 };
	int	ws[] = { 31, 21, 78, 53, 18, 66, 61, 4, 11, 65, 16, 99, 87, 91, 44, 23 };

//	int n = 58, W = 41;
//	double vals[] = { 57, 95, 13, 29, 1, 99, 34, 77, 61, 23, 24, 70, 73, 88, 33, 61, 43, 5, 41, 63, 8, 67, 20, 72, 98, 59, 46, 58, 64, 94, 97, 70, 46, 81, 42, 7, 1, 52, 20, 54, 81, 3, 73, 78, 81, 11, 41, 45, 18, 94, 24, 82, 9, 19, 59, 48, 2, 72 };
//	int	ws[] = { 83, 84, 85, 76, 13, 87, 2, 23, 33, 82, 79, 100, 88, 85, 91, 78, 83, 44, 4, 50, 11, 68, 90, 88, 73, 83, 46, 16, 7, 35, 76, 31, 40, 49, 65, 2, 18, 47, 55, 38, 75, 58, 86, 77, 96, 94, 82, 92, 10, 86, 54, 49, 65, 44, 77, 22, 81, 52 };

	double val = knapsack(n, W, ws, vals);
	cout << val << endl;
	system("pause");

}